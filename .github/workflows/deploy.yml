name: deploy

on:
  push:
    branches:
      - main

  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-web:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: production

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: setup Node
        uses: actions/setup-node@v2.1.5
        with:
          node-version: "20.10.0"

      - name: cache deps
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: install deps
        run: npm i
        working-directory: ./web/dbdb

      - name: build app
        run: npm run build
        working-directory: ./web/dbdb

      - name: save assets
        uses: actions/upload-artifact@v4
        with:
          name: web_assets
          path: ./web/dbdb/build

  deploy:
    name: Deploy app
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'
    needs: build-web

    steps:
      - name: load assets
        uses: actions/download-artifact@v4
        with:
          name: web_assets
          path: ./web/dbdb/build
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy -a dbdb --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
